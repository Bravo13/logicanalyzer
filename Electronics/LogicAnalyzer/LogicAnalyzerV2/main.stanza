; Generated by JITX 3.16.0
#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/generic-components
  import helpers

; Define the shape/size of the board
val board-shape = RoundedRectangle(150.0, 100.0, 0.25)

; Module to run as a design
pcb-module logic-analyzer :
  ; define some pins/ports
  port DA : pin[ [1,3,5,7,9,11,13,15,17,19,21,23] ]
  port DB : pin[ [2,4,6,8,10,12,14,16,18,20,22,24] ]
  port gnd
  port power-5v

  ; Level shifters
  inst U1 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])
  inst U2 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])
  inst U3 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])
  inst U4 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])
  inst U5 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])
  inst U6 : database-part(["mpn" => "TXU0104PWR", "manufacturer" => "Texas Instruments"])

  ; Decoupling caps
  bypass-cap-strap(U1.VCCA, gnd, 100.0e-9)
  bypass-cap-strap(U2.VCCA, gnd, 100.0e-9)
  bypass-cap-strap(U3.VCCA, gnd, 100.0e-9)
  bypass-cap-strap(U4.VCCA, gnd, 100.0e-9)
  bypass-cap-strap(U5.VCCA, gnd, 100.0e-9)
  bypass-cap-strap(U6.VCCA, gnd, 100.0e-9)

  bypass-cap-strap(U1.VCCB, gnd, 100.0e-9)
  bypass-cap-strap(U2.VCCB, gnd, 100.0e-9)
  bypass-cap-strap(U3.VCCB, gnd, 100.0e-9)
  bypass-cap-strap(U4.VCCB, gnd, 100.0e-9)
  bypass-cap-strap(U5.VCCB, gnd, 100.0e-9)
  bypass-cap-strap(U6.VCCB, gnd, 100.0e-9)

  inst U7 : database-part(["mpn" => "PICO", "manufacturer" => "Raspberry Pi"])

  inst J1 : database-part(["mpn" => "C65114", "manufacturer" => "BOOMELE"])
  ; Write the board version on silkscreen
  inst version-label  : ocdb/artwork/board-text/version-silkscreen("Version 0.0")
  place(version-label) at loc(0.0, height(board-shape) / 2.0 - 1.0) on Bottom

; Set the design name     - a directory with this name will be generated under the "designs" directory
;     the board           - a Board object
;     [optional] rules    - the PCB design rules (if not givn default rules will be used)
;     [optional] vendors  - Strings or AuthorizedVendors (if not give default vendors will be used)
;     [optional] quantity - Minimum stock quantity the vendor should carry (if not give default quantity will be used)
setup-design(
  "jitx-design",
  ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape)
)

; Set the schematic sheet size
set-paper(ANSI-A)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(logic-analyzer)

; Use any helper function from helpers.stanza here
; run-check-on-design(my-design)

; View the results
view-design-explorer()
view-bom(BOM-STD)
view-board()
view-schematic()
